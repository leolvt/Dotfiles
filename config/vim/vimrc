" Make vim respect XDG! (https://tlvince.com/vim-respect-xdg)
set directory=$XDG_CACHE_HOME/vim,~/,/tmp
set backupdir=$XDG_CACHE_HOME/vim,~/,/tmp
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
set runtimepath=$XDG_CONFIG_HOME/vim,$VIM,$VIMRUNTIME,$XDG_CONFIG_HOME/vim/after
let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc"

source $XDG_CONFIG_HOME/vim/plugin-config.vim

" ==========================
" Vundle :  Manages plugins
" ==========================

" Required stuff to set up Vundle
filetype off
set rtp+=$XDG_CONFIG_HOME/vim/bundle/vundle/
call vundle#begin("$XDG_CONFIG_HOME/vim/bundle")

" Let Vundle manage Vundle!
Plugin 'gmarik/vundle'

" Themes {{{1
"Plugin 'Pychimp/vim-luna'
"Plugin 'noah/vim256-color'
Plugin 'sjl/badwolf'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tomasr/molokai'
Plugin 'vim-scripts/256-jungle'
Plugin 'w0ng/vim-hybrid'
" }}}

" Vim Editor and interface features {{{1
Plugin 'bling/vim-airline'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'kien/ctrlp.vim'
Plugin 'milkypostman/vim-togglelist'
Plugin 'mutewinter/swap-parameters'
Plugin 'rking/ag.vim'
Plugin 'troydm/easybuffer.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'majutsushi/tagbar'
Plugin 'MarcWeber/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'sjl/gundo.vim'
Plugin 'mbbill/undotree'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
"Plugin 'Yggdroot/indentLine'
"Plugin 'g3orge/vim-voogle'
"Plugin 'matthias-guenther/hammer.vim'
"Plugin 'mhinz/vim-signify'
"Plugin 'mhinz/vim-startify'
"Plugin 'mutewinter/GIFL'
"Plugin 'terryma/vim-multiple-cursors'
"Plugin 'techlivezheng/vim-plugin-minibufexpl'
"Plugin 'msanders/snipmate.vim'
"Plugin 'garbas/vim-snipmate'

Plugin 'IndexedSearch'
Plugin 'TaskList.vim'
Plugin 'ZoomWin'
"Plugin 'HelpClose'
"Plugin 'scratch.vim'
" }}}

" Language specific bundles {{{1

" Python {{{ 2
"Plugin 'klen/python-mode'
Plugin 'jmcantrell/vim-virtualenv'
Plugin 'python.vim--Vasiliev'
" }}}

" Perl {{{
Plugin 'vim-perl/vim-perl'
" }}}

" HTML/CSS {{{2
Plugin 'mattn/emmet-vim'
" }}}

" GLSL {{{2
"Plugin 'Nemo157/glsl.vim'
" }}}

" Markdown {{{
Plugin 'tpope/vim-markdown'
" }}}

" C/C++ {{{
Plugin 'std_c.zip'
"Plugin 'aftersyntaxc.vim'
" }}}

" i3 {{{
Plugin 'PotatoesMaster/i3-vim-syntax'
" }}}

" LaTeX {{{
"Plugin 'LaTeX-Box-Team/LaTeX-Box'
" }}}

" Git Integration {{{1
Plugin 'gregsexton/gitv'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-git'
" }}}

" Integration and tools {{{1
Plugin 'tpope/vim-eunuch'
"Plugin 'benmills/vimux'
"Plugin 'mattn/webapi-vim'
" }}}

call vundle#end()
set rtp-=~/.vim

" Activate filetype and indent
filetype plugin indent on

source $XDG_CONFIG_HOME/vim/mappings.vim

" Some basic stuff {{{
" We want an improved editor, right?
set nocompatible

" Set default encoding
set encoding=utf-8

" Allow hidden modified buffers
set bufhidden="hide"

" Set the leader
let mapleader = '\'
let maplocalleader = '\'

" Search for tags in git folder, then recursively up
set tags=.git/tags;$HOME
"}}}

" General Behaviour {{{1
syntax on
set wildmenu           " Wild menu (shows tab completion for commands)
set cf                 " Enable error files & error jumping
set clipboard+=unnamed " Yanks go on clipboard

"set foldlevelstart=99  " Remove folds
set foldmethod=syntax

set mouse=a
set mousehide
set textwidth=80
set wildignore=.svn,CVS,.git,.hg,*.o,*.a,*.class,*.mo,*.la,*.so,*.obj,*.swp,*.jpg,*.png,*.xpm,*.gif,.DS_Store,*.aux,*.out,*.toc,tmp,*.scssc

set spelllang=en,pt
set spell
set dictionary=/usr/share/dict/words,~/.vim/dict.txt

set ignorecase
set smartcase
set incsearch
set hlsearch

" }}}

" Colors and Appearance {{{1

if has('gui_running')
	set guioptions=ai
	set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 13
	set background=dark
	"let g:solarized_termcolors=256
	"let g:solarized_termtrans=1
	"colorscheme solarized
	colorscheme hybrid
else
	" Explicitly tell Vim that the terminal supports 256 colors
	set t_Co=256
	set background=dark
	"let g:solarized_termcolors=256
	"colorscheme solarized
	colorscheme hybrid
endif

set ruler
set nu
set nowrap
set laststatus=2
set cmdheight=2
set cursorcolumn
set cursorline

" }}}

" Tab and indent behaviour {{{1

set autoindent
set tabstop=4
set softtabstop=4
set backspace=indent,eol,start
set shiftwidth=4
set smarttab
set expandtab
set cino=N-s,(s,us,U1
set completeopt=menuone,preview
set formatoptions=crqln1
set showmatch
set listchars=tab:\|\ ,extends:❯,precedes:❮,trail:␣
"set listchars=tab:→_,eol:¬,extends:❯,precedes:❮,trail:␣
set nolist
set conceallevel=0

" }}}

" Backup, Undo and Swap file {{{1
if has('persistent_undo')
    set undodir=~/.vim/tmp/undo//     " undo files
    set undofile
    set undolevels=3000
    set undoreload=10000
endif
set backup
set noswapfile
"
" Prevent various Vim features from keeping the contents of pass(1) password
" files (or any other purely temporary files) in plaintext on the system.
"
" Either append this to the end of your .vimrc, or install it as a plugin with
" a plugin manager like Tim Pope's Pathogen.
"
" Author: Tom Ryder <tom@sanctum.geek.nz>
"

" Don't backup files in temp directories or shm
if exists('&backupskip')
    set backupskip+=/tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*,*/shm/*,/media/truecrypt*
endif

" Don't keep swap files in temp directories or shm
if has('autocmd')
    augroup swapskip
        autocmd!
        silent! autocmd BufNewFile,BufReadPre
            \ /tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*,*/shm/*,/media/truecrypt*
            \ setlocal noswapfile
    augroup END
endif

" Don't keep undo files in temp directories or shm
if has('persistent_undo') && has('autocmd')
    augroup undoskip
        autocmd!
        silent! autocmd BufWritePre
            \ /tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*,*/shm/*,/media/truecrypt*
            \ setlocal noundofile
    augroup END
endif

" Don't keep viminfo for files in temp directories or shm
if has('viminfo')
    if has('autocmd')
        augroup viminfoskip
            autocmd!
            silent! autocmd BufNewFile,BufReadPre
                \ /tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*,*/shm/*,/media/truecrypt*
                \ setlocal viminfo=
        augroup END
    endif
endif

" }}}

source $XDG_CONFIG_HOME/vim/autocmd.vim

" ==========================
" Display Syntax Class
" ==========================

nmap <C-S-S> :call SynStack()<CR>
function! SynStack()
    "function! SynStack()
    if !exists("*synstack")
        return
    endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

